apiVersion: apps/v1
kind: Deployment
metadata:
  name: slv-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app: slv-operator
    {{- with .Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas | default 1}}
  selector:
    matchLabels:
      app: slv-operator
  template:
    metadata:
      labels:
        app: slv-operator
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: slv-serviceaccount
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if not (.Values.webhook.disableAutomaticCertManagement) }}
        - name: cert
          secret:
            secretName: {{ .Values.webhook.certSecretName | default "slv-webhook-server-cert"}}
      {{- end }}
      containers:
      {{- if and (.Values.image) (not (hasSuffix .Chart.Version .Values.image)) -}}
      {{- fail (printf "The image tag must be set to the Chart.Version '%s'" .Chart.Version) -}}
      {{- end }}
        - name: slv
          image: {{ .Values.image | default (printf "ghcr.io/amagioss/slv:%s" .Chart.AppVersion) }}
          startupProbe:
            tcpSocket:
              port: 9443
            initialDelaySeconds: 0
            periodSeconds: 2
            failureThreshold: 100
          resources:
            {{- if .Values.webhook.disableAutomaticCertManagement | default false }}
            limits:
              cpu: {{ .Values.resource.limits.cpu | default "200m"}}
              memory: {{ .Values.resource.limits.memory | default "192Mi"}}
            requests:
              cpu: {{ .Values.resource.requests.cpu | default "200m"}}
              memory: {{ .Values.resource.limits.memory | default "192Mi"}}
            {{- else }}
            limits:
              cpu: {{ .Values.resource.limits.cpu | default "250m"}}
              memory: {{ .Values.resource.limits.memory | default "256Mi"}}
            requests:
              cpu: {{ .Values.resource.requests.cpu | default "250m"}}
              memory: {{ .Values.resource.limits.memory | default "256Mi"}}
            {{- end }}
          env:
            {{- with .Values.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
              {{- if ne .Values.k8sSecret ""}}
            - name: SLV_K8S_ENV_SECRET
              value: {{ .Values.k8sSecret }}
              {{- end }}
              {{- if ne .Values.secretBinding "" }}
            - name: SLV_ENV_SECRET_BINDING
              value: {{ .Values.secretBinding }}
              {{- end }}
            - name: SLV_MODE
              value: "k8s_operator"
            - name: SLV_DISABLE_CERT_ROTATION
              value: {{ .Values.webhook.disableAutomaticCertManagement | quote }}              
              {{- if not (.Values.webhook.disableAutomaticCertManagement) }}
            - name: SLV_WEBHOOK_SERVICE_NAME
              value: {{ .Values.webhook.serviceName | quote }}
            - name: SLV_WEBHOOK_VWH_NAME
              value: {{ .Values.webhook.validatingWebhookConfigName | quote }}
            - name: SLV_WEBHOOK_SECRET_NAME
              value: {{ .Values.webhook.certSecretName  | quote }}
              {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if not (.Values.webhook.disableAutomaticCertManagement) }}
            - name: cert
              mountPath: /tmp/k8s-webhook-server/serving-certs
              readOnly: true
          {{- end }}
          args:
            {{- if gt (int .Values.replicas) 1 }}
            - "--leader-elect=true"
            {{- end }}
